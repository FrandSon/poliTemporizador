name: Deploy
run-name: Deploy PoliTemporizador to GitHub Pages
on:
  push:
    branches: [main]

jobs:
  prepare-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      build-artifact: ${{ steps.set-artifact-path.outputs.download-path }}
    steps:
      - name: Descargar repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: 'npm'

      # FIXED AUTHENTICATION STEP
      - name: Autenticar GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: Encontrar el Ãºltimo workflow exitoso
        id: find-workflow
        run: |
          RUN_ID=$(gh run list --workflow=build.yml --branch=main --status=success --json databaseId -q ".[0].databaseId" --limit 1)
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          echo "Found successful build run: $RUN_ID"

      # FIXED DOWNLOAD STEP
      - name: Descargar artefacto de compilaciÃ³n
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          run-id: ${{ steps.find-workflow.outputs.run_id }}  # FIXED: run-id instead of run_id
          github-token: ${{ secrets.GH_TOKEN }}  # ADDED: Required authentication

      - name: Verificar descarga
        run: ls -la dist/

      - name: Establecer ruta del artefacto
        id: set-artifact-path
        run: |
          echo "download-path=$(pwd)/dist" >> $GITHUB_OUTPUT
          echo "Artifact path set to: $(pwd)/dist"

  deploy-production:
    runs-on: ubuntu-latest
    needs: prepare-deploy
    timeout-minutes: 10
    steps:
      - name: Usar artefacto descargado
        run: |
          echo "ðŸ“‚ Usando artefacto en: ${{ needs.prepare-deploy.outputs.build-artifact }}"
          ls -la ${{ needs.prepare-deploy.outputs.build-artifact }}

      - name: Desplegar en GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ needs.prepare-deploy.outputs.build-artifact }}
          force_orphan: true
          keep_files: false

      - name: Verificar despliegue
        run: |
          echo "âœ… AplicaciÃ³n desplegada en:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.repository }}"
